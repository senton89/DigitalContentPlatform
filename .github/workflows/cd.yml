# .github/workflows/cd.yml
name: CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build-and-push-docker-images:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for API
        id: meta-api
        uses: docker/metadata-action@v4
        with:
          images: yourusername/digitalcontent-api
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch

      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./DigitalContentPlatform.API/Dockerfile
          push: true
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}

      - name: Extract metadata (tags, labels) for Client
        id: meta-client
        uses: docker/metadata-action@v4
        with:
          images: yourusername/digitalcontent-client
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch

      - name: Build and push Client image
        uses: docker/build-push-action@v4
        with:
          context: ./digital-content-platform-client
          file: ./digital-content-platform-client/Dockerfile
          push: true
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}

  deploy:
    needs: build-and-push-docker-images
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /path/to/deployment
            docker-compose pull
            docker-compose down
            docker-compose up -d