import React, { useState } from 'react';
import './SendEmailForm.css';

interface SendEmailFormProps {
  url: string;
  itemName: string;
}

const SendEmailForm: React.FC<SendEmailFormProps> = ({ url, itemName }) => {
  const [email, setEmail] = useState('');
  const [message, setMessage] = useState('');
  const [loading, setLoading] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');
  const [errorMessage, setErrorMessage] = useState('');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setSuccessMessage('');
    setErrorMessage('');

    try {
      const response = await fetch('http://localhost:5268/api/Email/send', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          to: email,
          subject: `–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º: ${itemName}`,
          body: `
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

${message}

üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç: ${url}
`,
        }),
      });

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞');
      }

      setSuccessMessage('–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      setEmail('');
      setMessage('');
    } catch (err: any) {
      setErrorMessage(err.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ');
    } finally {
      setLoading(false);
    }
  };

  return (
      <div className="send-email-form">
        <h4>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ email</h4>
        {successMessage && <p className="success">{successMessage}</p>}
        {errorMessage && <p className="error">{errorMessage}</p>}

        <form onSubmit={handleSubmit}>
          <input
              type="email"
              placeholder="Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
          />

          <textarea
              placeholder="–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
              value={message}
              onChange={(e) => setMessage(e.target.value)}
          />

          <button type="submit" disabled={loading}>
            {loading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
          </button>
        </form>
      </div>
  );
};

export default SendEmailForm;